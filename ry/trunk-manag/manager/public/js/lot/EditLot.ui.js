/*
 * File: EditLot.ui.js
 * Date: Fri Apr 29 2011 18:11:37 GMT+0300 (EEST)
 * 
 * This file was generated by Ext Designer version 1.1.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
    var ajax = new Ext.data.Connection();
    ajax.request({
        url: '/product/get_item',
        method: 'POST',
        params: 'ids=' + 1,
        success: function(resp){
            var options = Ext.decode(resp.responseText);
            temp = options;
        },
        failure: function(){
            Ext.MessageBox.alert('Ошибка', 'возникла ошибка!');
        }
    });
    
    var store = new Ext.data.JsonStore({
        fields: ['ShopName', 'Title', 'Descr', 'Translited', 'LotID'],
        url: 'http://localhost:4000/product/getByCategory'
    });
    //store.setDefaultSort('lastpost', 'desc');
    
    var grid = new Ext.grid.GridPanel({
        width: 900,
        height: 500,
        title: 'Эталоны',
        store: store,
        trackMouseOver: false,
        disableSelection: false,
        loadMask: true,
        // grid columns
        columns: [{
            id: 'id',
            header: "id",
            dataIndex: 'LotID',
            width: 30,
            sortable: true
        }, {
            id: 'title',
            header: "Название",
            dataIndex: 'Title',
            width: 340,
            sortable: true
        }, {
            header: "Описание",
            dataIndex: 'Descr',
            width: 100,
            hidden: true,
            sortable: true
        }, {
            header: "Урл",
            dataIndex: 'Translited',
            width: 170,
            align: 'center',
            sortable: true
        }, {
            id: 'shop',
            header: "Магазин",
            dataIndex: 'ShopName',
            width: 150,
            sortable: true
        }],
        
        // paging bar on the bottom
        bbar: new Ext.PagingToolbar({
            pageSize: 25,
            store: store,
            displayInfo: true,
            displayMsg: 'Displaying topics {0} - {1} of {2}',
            emptyMsg: "No topics to display",
            items: ['-', {
                pressed: true,
                enableToggle: true,
                text: 'Редактировать',
                cls: 'x-btn-text-icon details',
                toggleHandler: function(btn, pressed){
                    var view = grid.getView();
                    view.showPreview = pressed;
                    view.refresh();
                }
            }]
        })
    });
    
    grid.getSelectionModel().on('rowselect', function(sm, rowIdx, r){        
        ajax.request({
            url: '/product/getone',
            method: 'POST',
            params: 'ids=' + r.data.LotID,
            success: function(resp){
                var options = Ext.decode(resp.responseText);                
				gridReference.setSource(options);
            },
            failure: function(){
                Ext.MessageBox.alert('Ошибка', 'возникла ошибка!');
            }
        });
        
    });
    
    
    //grid.render('descr-container');
    
    store.load({
        params: {
            start: 0,
            limit: 25
        }
    });



var gridReference = new Ext.grid.PropertyGrid(

{
    xtype: 'propertygrid',							
    title: 'Эталон',
    store: 'FeatcherStore',
    height: 358,
    width: 779,
    columns: [
        {                                        
            dataIndex: 'string',
            header: 'Название',
            sortable: true,
            width: 100                                     
        },
        {                                        
            dataIndex: 'number',
            header: 'Значение',
            sortable: true,
            width: 100,
            align: 'right'                                                                      
        }
    ]
})

EditLotUi = Ext.extend(Ext.Panel, {
    title: 'Редактирование эталонов',       
    initComponent: function() {
        this.items = [
            grid,
            {
                xtype: 'tabpanel',
                activeTab: 0,
                height: 470,
                items: [
                    {
                        xtype: 'panel',
                        title: 'Характеристики',
                        height: 477,
                        items: [gridReference,
						btnAdd,
						buttonObject						          
                        ]
                    },
                    {
                        xtype: 'panel',
                        title: 'Описание',
                        items: [
                            {
                                xtype: 'label',
                                text: 'Описание товара'
                            },
                            {
                                xtype: 'textarea',
                                width: 770,
                                height: 278,
                                id: 'txtDescription'
                            },
                            {
                                xtype: 'button',
                                text: 'Сохранить',
                                id: 'btnSave'
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        title: 'Товары',
                        items: [
                            {
                                xtype: 'listview',
                                columnResize: false,
                                store: 'ItemStore',
                                height: 426,
                                width: 776,
                                columns: [
                                    {
                                        xtype: 'lvcolumn',
                                        header: 'ID',
                                        width: 0.25
                                    },
                                    {
                                        xtype: 'lvcolumn',
                                        header: 'Магазин'
                                    },
                                    {
                                        xtype: 'lvcolumn',
                                        header: 'Отображать'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        title: 'Обзоры'
                    },
                    {
                        xtype: 'panel',
                        title: 'Отзывы'
                    }
                ]
            },
            {
                xtype: 'fieldset',
                title: 'Фильтр',
                width: 780,
                height: 87
            }
        ];
        EditLotUi.superclass.initComponent.call(this);
    }
});

 
var buttonObject = new Ext.Button(
{
	text:'Сохранить',
	handler:function(){
		x = gridReference.getSource();
		var ajax = new Ext.data.Connection();
    	ajax.request({
        url: '/product/set_item',
        method: 'POST',
        params:  x,
        success: function(resp){
            alert("Ok");
        },
        failure: function(){
            Ext.MessageBox.alert('Ошибка', 'возникла ошибка!');
        }
    });
	}
});
var btnAdd = new Ext.Button(
{
	text:'Добавить',
	handler:function(){
		var fldPropertyName = new Ext.form.TextField({	 
     name: 'propertyName'
})
var fldValueName = new Ext.form.TextField({	 
     name: 'propertyValue'
})
var form = new Ext.form.FormPanel({        
        labelWidth: 55,        
        layout: {
            type: 'vbox',
            align: 'stretch'  
        },      
        items: [{
			xtype:"label",
			text:"Название:"
		},
		fldPropertyName,
		{
			xtype:"label",
			text:"Значение:"
		},
		fldValueName]
    });
var w = new Ext.Window({
        title: 'Добавить новые хар-ти',
        width: 350,
        height: 200,        
        layout: 'fit',
        plain: true,
        bodyStyle: 'padding:5px;',
        buttonAlign: 'center',
        items: form,
        buttons: [{
            text: 'Добавить',
			handler: function(){
				x = gridReference.getSource();
				x[fldPropertyName.getRawValue()] = fldValueName.getRawValue();							
				gridReference.setSource(x);
				w.close();
			}
        },{
            text: 'Cancel',
			handler: function(){
				w.close();
			}
        }]
    });
		
		w.show()
	}
});

    //w.show();

