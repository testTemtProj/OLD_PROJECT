=====================
Структура базы данных
=====================

Рекламные кампании
------------------

Рекламные кампании, запущенные для показа в GetMyAd, хранятся в коллекции
``campaign``::

	{
		title: 'Наименование кампании',
		guid:  'GUID кампании',
		social: false,
		showConditions: {
			geoTargeting:       ['RU', 'UA'],
			cityTargeting:		['Kharkov'],
			regionTargeting:	["Kharkivs'ka Oblast'"],
			daysOfWeek:         [1,2,3,4,5],
			startShowTime:      {hours: 7, minutes: 0},
			endShowTime:        {hours: 22, minutes: 0},
			clicksPerDayLimit:  1000,
			categories:         ['cat1', 'cat2'],
			showCoverage:       'all|thematic|allowed',
			allowed: {
				accounts:  ['account1', 'account2'],
				domains:   ['example.com']
				informers: ['INF_ID_01']
			},
			ignored: {
				accounts:  ['account3', 'account4'],
				domains:   ['example.org']
				informers: ['INF_ID_02']
			},
		},
		lastUpdate: new Date()
	}

``social`` --- является ли кампания социальной рекламой.

``showConditions`` определяет правила и условия показа рекламной кампании.

``geoTargeting`` --- страны, в которых нужно осуществлять показ кампании.
Страны кодируются двухбуквенным обозначением. Если этот список пуст,
показ будет осуществляться во всех странах.

``cityTargeting`` --- города, в которых нужно осуществлять показ кампании.
Написание городов должно соответствовать базе MaxMind GeoIP City. Если
список пуст, таргетинг по городам считается отключенным, показ осуществляется
во всех городах.

``regionTargeting`` --- таргетинг по регионам/областям. См. описание коллеции
``geo.regions``.

``daysOfWeek`` --- дни недели, в которые осуществляется показ.
Понедельнику соответствует цифра 1, вторнику 2 и так далее до воскресенья (7).
Если список пуст, показ будет осуществляться во все дни недели.

``startShowTime`` --- время суток, в которое начинается показ кампании.

``endShowTime`` --- время суток, в которое прекращается показ кампании

``clicksPerDayLimit`` --- ограничение на количество переходов в сутки.
 
``categories`` --- список GUID-ов тематических категорий к которым относится
кампания.

``showCoverage`` --- покрытие кампанией рекламных площадок. Может принимать
следующие значения:

+--------------+----------------------------------------------------------+
|    *all*     | кампания будет показана везде, кроме элементов,          | 
|              | перечисленных в ``ignored``                              |
+--------------+----------------------------------------------------------+
|  *thematic*  | кампания будет показана на доменах, совпадающих по       |
|              | тематике (категориям). Из просмотра исключаются          |
|              | ``ignored`` элементы и добавляются ``allowed``.          |
+--------------+----------------------------------------------------------+
|  *allowed*   | кампания будет показываться только на ``allowed``        |
|              | информерах/аккаунтах/доменах                             |
+--------------+----------------------------------------------------------+

Если значение не задано, свойство принимается за ``allowed``.


``lastUpdate`` --- время последней синхронизации кампании с AdLoad
(см. :meth:`getmyad.controllers.rpc.RpcController.campaign_update`).

Остановленные кампании переносятся в коллецию ``campaign.archive``. 


Рекламные предложения
---------------------

Под термином *"рекламные предложения"* понимаются объекты, которые могут
рекламироваться в GetMyAd:

1. товары, которые загружаются парсером Рынка из yml-файлов;
2. частные предложения, создаваемые в AdLoad.

Эти объекты хранятся в коллекции ``offer`` и имеют следующий вид::

	{
		guid:        'GUID предложения',
		title:       'Заголовок',
		price:       '500 грн.',
		url:         'http://example.com/offer.html',
		image:       'http://cdn.yottos.com/img/01.jpeg',
		description: 'Подробное описание предложения',
		dateAdded:   new Date(),
		campaignId:  'GUID рекламной кампании'
	}


Тематические категории
----------------------

Товарные предложения рекламной кампании относятся к определённой 
тематической категории. Этим же тематическим категориям соответствуют
тематики сайтов на которых рекламируются товары.

Объекты хранятся в коллекции ``advertise.category``::
	
	{
	  title: 'example_category',
	  guid: 'AAAA1-EEE...',
	  clickCost: 0.10
	}  


Категории доменов
-----------------

Наиболее эффективной является реклама товаров соответствущих тематике 
рекламной площадки. Для этого реализована возможность указывать рекламные 
категории для каждого определённого домена. Каждому домену ставится 
в соответствие перечень категорий. 

Объекты хранятся в коллекции ``domain.categories``::

	{
      domain: 'example.com',
      categories: [GUID1, GUID2,...]
  	}


Информеры
---------

Объекты хранятся в коллекции ``informer``::

	{
		guid:	  'GUID информера',
		title:    'Название информера',
		domain:   'example.com',
		user:     'silver',
		css:      '{.color: #000}',
		admaker:  AdMakerOptions,
		nonRelevant: { 
                        action:   'social|usercode',
                        userCode: '<script>.....</script>'
                     }
	}

``domain`` --- это домен к которому привязан информер. Информацию о том,
какие домены привязаны к каким аккаунтам можено получить в коллекции
``user.domains``.

``user`` --- логин пользователя, которому принадлежит информер (см. коллекцию
``users``).

``css`` --- css, задающий внешний вид информера. HTML разметка для всех
информеров генерируется одинаковой, все настройки внешнего вида производятся
через это свойство. Это поле составляется с помощью подпрограммы AdMaker.

``nonRelevant`` определяет поведение информера в случае отсутствия релевантной
рекламы. Действие по умолчанию (``nonRelevant.action``) равно 'social',
что обозначает показ социальной (неоплачиваемой) рекламы. Если же поле равно
'usercode', то будет выводится пользовательский код из поля
``nonRelevant.userCode``.

``admaker`` --- структура ``AdMakerOptions`` с настройками AdMaker::

	{
		Description : {
			"borderColor" : "ffffff",
			"fontUnderline" : false,
			"fontBold" : false,
			"hide" : false,
			"top" : "33",
			"height" : "28px",
			"width" : "200px",
			"fontSize" : "11",
			"borderWidth" : "0",
			"fontColor" : "333333",
			"align" : "left",
			"left" : "79"
		},
		Image : {
			"borderColor" : "9999aa",
			"fontUnderline" : false,
			"fontBold" : false,
			"hide" : false,
			"top" : "6",
			"height" : "70px",
			"width" : "70px",
			"borderWidth" : "1",
			"align" : "center",
			"left" : "3"
		},
		Header : {
			"borderColor" : "666666",
			"fontUnderline" : false,
			"fontBold" : true,
			"hide" : false,
			"top" : "2",
			"height" : "28px",
			"width" : "180px",
			"fontSize" : "12",
			"borderWidth" : "0",
			"fontColor" : "0063dc",
			"align" : "center",
			"left" : "90"
		},
		Cost : {
			"borderColor" : "9f9feb",
			"fontUnderline" : false,
			"fontBold" : true,
			"hide" : false,
			"top" : "66",
			"height" : "14px",
			"width" : "100px",
			"fontSize" : "12",
			"borderWidth" : "0",
			"fontColor" : "51ac3d",
			"align" : "left",
			"left" : "79"
		},
		Nav : {
			"color" : "0000ff",
			"logoPosition" : "bottom-right",
			"logoColor" : "color",
			"navPosition" : "top-right",
			"backgroundColor" : "c0e0ff"
		},
		Advertise : {
			"borderColor" : "303030",
			"fontUnderline" : false,
			"fontBold" : false,
			"hide" : false,
			"top" : "0",
			"height" : "84px",
			"width" : "300px",
			"borderWidth" : "",
			"align" : "center",
			"left" : "0"
		},
		Main : {
			"borderColor" : "9999aa",
			"fontUnderline" : false,
			"fontBold" : false,
			"hide" : false,
			"top" : "0",
			"height" : "84px",
			"width" : "628px",
			"borderWidth" : "1",
			"backgroundColor" : "fbf1d2",
			"itemsNumber" : "2",
			"align" : "center",
			"left" : "0"
		}
	
	}

Настройки разбиты на блоки:

``Description`` --- блок подробного описания рекламного предложения.

``Image`` --- картинка предложения.

``Header`` --- блок заголовка предложения (название).

``Cost`` --- блок цены.

``Nav`` --- блок навигации, описывает стрелочку прокрутки и логотип Yottos.

``Advertise`` --- блок одного рекламного предложения в целом

``Main`` --- весь информер. Этот блок содержит также важное свойство
``itemsNumber``, которое определяет количество предложений, которое можно
разместить на информере.


Пользователи
------------

TODO: написать раздел.


``moneyOutPaymentType`` --- массив доступных для аккаунта способов
вывода средств. На данный момент поддерживаются следующие варианты:

+-------------+---------------------+
| webmoney_z  | WebMoney Z          |
+-------------+---------------------+
| card        | Банковская карта    |
+-------------+---------------------+
| factura     | Счёт-фактура        |
+-------------+---------------------+

Если поле отсутствует или содержит пустой список, доступным считается
вариант 'webmoney_z'.

``lastPaymentType`` --- тип вывода средств (см. moneyOutPaymentType),
применявшийся в последний раз.

``hidden`` --- пользователь скрывается из выдачи. Применяется, например,
для неактивных аккаунтов. Удалить их нельзя, поскольку висят операции,
а место на экране занимают :)

``blocked`` --- блокировка аккаунта. Может принимать следующие значения:

+---------------+------------------------------------------------------------------------------------+
| False или ''  | Аккаунт не заблокирован, значение по умолчанию                                     |
+---------------+------------------------------------------------------------------------------------+
|   'light'     | Временнная приостановка. Применяется для аккаунтов, которые сняли наши информеры.  |
|               | В этом случае клики и показы перестают засчитываться.                              |
|               | Пользователь может самостоятельно отменить блокировку, зайдя в свой аккаунт        |
+---------------+------------------------------------------------------------------------------------+
|   'banned'    | Аккаунт пользователя отключён за нарушения. Пользователь полностью                 |
|               | теряет доступ к своему аккаунту                                                    |
+---------------+------------------------------------------------------------------------------------+


Журнал показов
--------------

Предложения, которые показываются пользователям, журналируются в коллекции
``log.impressions``. Это `capped коллекция <http://www.mongodb.org/display/DOCS/Capped+Collections>`_,
обладающая следующими свойствами:

1. Ограничение на размер и количество записей.
2. При достижении ограничения, новые записи будут помещаться на место старых.
3. Гарантируется сохранение порядка вставки элементов, т.е. нет нужды
   сортировать коллекцию по дате и времени.
4. Вставка в эту коллекцию осуществляется очень быстро, однако элементы
   нельзя выборочно удалять.

По расписанию запускается процесс, который собирает статистику показов,
накопленную со времени последнего запуска. Об удалении элементов можно не
беспокоиться исходя из свойств таблицы.

Размер таблицы выбирается таким образом, чтобы сохранить данные за промежуток
между вызовами обработчика статистики. То есть, если обработчик статистики
вызывается раз в 30 минут, то коллекция должна сохранить данные как минимум 
за 30 минут, иначе произойдёт потеря. В данный момент размер коллекции
ограничен 1 миллионом записей, чего при нынешней нагрузке хватает на полтора
часа. 

Запись в ``log.impressions`` имеет вид::

	{
		dt: new Date(),
		id: 'offer guid',
		ip: '192.168.0.1',
		inf: 'informer guid',
		title: 'Наименование предложения'
		social: true
	}

Поле ``social`` является признаком, что предложение было социальной рекламой
и может отсутствовать для коммерческих предложений (т.е. по умолчанию равно
``false``)



Журнал кликов (переходов)
-------------------------

TODO: дописать раздел

Переходы пользователей по ссылкам рекламных предложений записываются в
capped коллекцию ``clicks``::

	{
	}
	
Как и в случае с журналом показов ``log.impressions``, периодически
запускается агрегация данных из этой таблицы.


Журнал результатов обработки статистики
---------------------------------------

Каждый запуск обработки статистики оставляет запись в коллекции
``log.statisticProcess``. Это ``capped`` коллекция, находится в базе
данных журналирования. Имеет следующий формат::

	{
		dt : "Sat Aug 21 2010 18:45:12 GMT+0300 (MSK)",
		impressions : {
			count : 0,
			elapsed_time : 0
		},
		clicks : {
			count : 1,
			elapsed_time : 0
		}
	}
	
Здесь поля ``count`` --- это количество обработанных записей о показах
(impressions) и кликах (clicks) соответственно. ``elapsed_time`` --- 
это затраченное на обработку время, в секундах.


Агрегированная статистика
-------------------------

TODO: написать раздел

Общая статистика по GetMyAd с разбивкой по датам: ``stats_overall_by_days``.

Чёрные списки IP
----------------
В чёрные списки попадают ip людей, замеченных в участии в сайтах-накрутиках,
а также боты и т.п. Коллекция ``blacklist.ip`` должна иметь индекс по ``ip``.
Формат записи::

	{
		ip: '192.168.0.1',
		dt: new Date()
	}
	
``dt`` --- это время/дата, когда ``ip`` был внесен в чёрный список.

Список периодически чистится. IP, которые пробыли в бане больше 4 недель
снова начинают учитываться. Чисткой занимается периодическая задача
``clean_ip_blacklist``.     

TODO: указывать причину, по которой был забанен ip.


Уменьшенные копии (thumbnails) изображений
------------------------------------------

В работе GetMyAd (и остальных проектов тоже) часто используются
*thumbnails* --- изображения, уменьшенные таким образом, чтобы вписываться в
заданные размеры. Раньше каждый проект хранил файлы этих картинок на своём
домене, однако с приходом GetMyAd трафик увеличился в десятки раз. Поэтому
теперь изображения, используемые GetMyAd, а со временем и остальными
проектами, лежат на домене ``cdnt.yottos.com``. Использование отдельного
домена для хранения изображений несёт несколько преимуществ:

	1. Нет проблем с региональными доменами. Для ``.ru``, ``.com.ua``,
	   ``.com`` файлы будут одинаковы.
	2. Широкий канал достаточно обеспечить только этому домену. Это
	   преимущество проявилось с покупкой новых серверов. 

Для создания thumbnail существует rpc-метод
:meth:`getmyad.controllers.rpc.RpcController.resize_and_upload_image`.

Информация об обработанных изображениях храниться в коллекции ``image``::

	{
		'src': 'http://example.com/image.jpg',
		'120x120': {
			url: 'http://cdnt.yottos.com/getmyad/img/9e8e702c98c111dfbac80026220eb064.jpg',
			w: 120,
			h: 120,
			realWidth: 120,
			realHeight: 80,
			dt: new Date(2010, 06, 26, 18, 47)
		},
		'200x200': {
			'url': 'http://cdnt.yottos.com/getmyad/img/a221e65698c111dfbac80026220eb064.jpg',
			w: 200,
			h: 200,
			realWidth: 200,
			realHeight: 160,
			dt: new Date(2010, 06, 26, 18, 50)
		}
	}

URL оригинального изображения находится в поле ``src``. По этому полю
проставлен индекс.

Информация о пережатых изображениях находится под ключами вида ``WxH``,
где ``W`` --- ширина, а ``H`` --- высота прямоугольника, в который вписано
изображение.

``realWidth`` и ``realHeight`` это реальные размеры изображения, которые
могут быть меньше, чем размеры прямоугольника ``w`` × ``h``, в который
производится вписывание.

``dt`` --- дата и время обработки изображения.



Справочник географических областей (регионов)
---------------------------------------------
Этот справочник используется в настройке таргетинга кампаний по областям.
Запись коллекции ``geo.regions`` имеет следующий формат::

	{
		region: "Chernivets'ka Oblast'",
		ru: "Черновцы",
		country: "UA"
	}

В поле ``region`` содержится название области в том написании, как оно
используется в базе MaxMind GeoCity. В поле ``ru`` хранится 
экранное имя (то, что будет выводится пользователю) на русском языке.
``country`` хранит двубуквенный код страны, к которой относится область. 

=================
Очереди сообщений
=================

Для обмена уведомлениями об изменениях в рекламных кампаниях система
использует диспетчер очередей сообщений RabbitMQ_. Ниже приведено
описание точек обмена (exchanges) и создаваемых очередей. Это важно,
потому что во-первых все участники обмена должны объявлять exchanges
одинаково, а во-вторых потому что некоторые очереди, возможно, придётся
периодически чистить.

Exchange: getmyad
-----------------

:type: topic
	
:durable: False
	
:auto_delete: True

В эту точку обмена отправляются сообщения, связанные с работой GetMyAd:

===================  ===========================================================================
routing_key          Описание
===================  ===========================================================================
campaign.start       Кампания была запущена. ID кампании передаётся в теле сообщения.
campaign.stop        Кампания была остановлена. ID кампании передаётся в теле сообщения.
campaign.update      Кампанию была обновлена. ID кампании передаётся в теле сообщения.
informer.update      Информер был обновлён или создан. ID информера передаётся в теле сообщения.
account.update		 Изменения в аккаунте GetMyAd. В теле сообщения передаётся логин.
===================  ===========================================================================


.. _RabbitMQ: http://www.rabbitmq.com/