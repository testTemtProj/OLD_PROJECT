===================
Архитектура проекта
===================


Использумые сервера, базы данных и настройки
--------------------------------------------

**Загрузчики рекламных скриптов** (см. ниже) должны лежать на сервере с
максимальной (100%) доступностью. Загрузчики представляют собой
крошечные статические файлы, число которых равно числу информеров.
Заливаться на этот сервер должны при помощи FTP, настройки которого
должны быть прописаны в конфиге в параметрах ``informer_loader_ftp*``.

В случае падения рабочего процесса getmyad_worker, балансировщик
переключает запросы **резервному серверу**. Резервный сервер раздаёт
статические "заглушки", предварительно подготовленные при создании
информера. Заглушка --- это небольшой HTML файл, подстроенный под
дизайн конкретного информера и содержащий прямые ссылки на социальную
рекламу. Таким образом маскируются нестабильности и перебои в нашей
работе. Заглушки должны заливаться по FTP. Настройки его лежат в конфиге
в параметрах ``reserve_ftp*``.

Статические файлы, предназначенные для массовой раздачи, лежат на
сервере **CDN** (Content Distribution Network). Этими файлами могут быть
картинки, скрипты, видео, презентации, документы и т.п. Этот сервер
должен обладать широким каналом. В идеальном случае, для CDN должно быть
использован отдельный домен без cookies (*см.* `почему 
<http://developer.yahoo.com/performance/rules.html#cookie_free>`_),
так что варианты типа cdn.yottos.com --- это не самые лучшие варианты.
Заливка осуществляется по FTP, за настройку отвечают параметры ``cdn_ftp*``
в конфиге.


Скрипт рекламной выгрузки
-------------------------

Пользователю выдаётся скрипт вида::

	<script type="text/javascript"><!--
	yottos_advertise = "DC7A9260-E4CE-4013-AF5B-C17EAA33FBF1";
	//-->
	</script>
	<script type="text/javascript" src="http://cdn.yottos.com/getmyad/_a.js">
	</script>

``a.js`` -- это статический скрипт, который строит ссылку на скрипт построения информера. 
Ссылка включает в себя UUID выгрузки и дополнительные поля, такие как url открытого сайта,
referrer и т.д.

Скрипты построения информера на данный момент (24/04/2010) представляют собой простые статические 
файлы с именем, содержащим UUID. Всё, что они делают, это выводят тэг ``IFRAME`` старого образца, 
ссылающийся на динамическое составление информера. То есть, никаких преимуществ использования 
javascript загрузки мы пока не используем, кроме одного (возможно, самого важного): возможность
менять размеры выгрузок и вообще весь код без изменения кода, размещённого на сайте пользователя. 

Поскольку загрузка информеров через javascript тормозит загрузку всего сайта на время, пока скрипт 
не будет получен и выполнен, то к надёжности этих двух скриптов предъявляются особые требование. 
Сейчас эти файлы лежат на отдельном хостинге. Заливаются они туда скриптом ``upload-scripts.py``.


Рабочие процессы getmyad-worker
-------------------------------
Показ рекламы осуществляется модулем getmyad-worker. Эта часть написана на C++ и расчитана на подключение
к серверу по FastCGI. Основная нагрузка ложится именно на этот модуль.

getmyad-worker использует базу данных для получения информации о рекламных кампаниях, товарах, информерах
и т.д. Рассматривалась и даже частично реализовывалась возможность получения данных от сервера GetMyAd
через XML-RPC.

TODO: дописать


Обработка перехода по ссылке рекламного предложения
---------------------------------------------------

TODO: Дописать

IP ищется в чёрном списке (см. database/blacklist.ip). Если найден, то
дальнейшая обработка прерывается, делается запись в clicks.rejected,
а клик не засчитывается ни в getmyad, ни в adload.
