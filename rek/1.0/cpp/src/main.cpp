#include <glog/logging.h>
#include "CgiService.h"

/** \mainpage GetMyAd worker
 
    \section usage_section Использование

    \b getmyad-worker --- это модуль, ответственный за непосредственное отображение
    рекламы на сайтах-партнёрах. Может подключаться тремя вариантами:

    -# Основной режим использования --- через FastCGI.
    -# Через CGI --- удобно для проверки работоспобности с сервером.
    -# Для удобства отладки может вызываться из командной строки с параметром
        QUERY_STRING, то есть той частью, которая находится после вопросительного
        знака в url.

    Примеры использования из командной строки:

    \code
	getmyad-worker ?scr=49A37671-D505-4B07-8BCA-0B3F65A99B73&country=UA
	getmyad-worker ?show=status
    \endcode


    \section settings_section Настройка сервиса

    getmyad-worker использует две базы данных mongo:

    -# Главная БД, которая содержит описание всех сущностей (информеры,
       кампании, предложения и т.д.). Это основная база данных проекта,
       которую использует пользовательская часть. На уровне приложения
       регистрируется как база данных по умолчанию (см. DB::addDatabase).
    -# БД для ведения журнала показов и кликов. Этих баз данных может быть
       несколько. С некоторой периодичностью данные из этих баз обрабатываются,
       и собранная статистика записываются в основную БД. Регистриуется под
       именем "log".

    Можно совместить обе этих БД в одной, однако это не рекомендуется. Вариант,
    в котором на каждом сервере, выполняющем getmyad-worker, расположена своя
    БД для журналирования, является оптимальным с точки зрения архитектуры и
    производительности.

    Настройка параметров подключения к этим базам данных осуществляется
    передачей переменных окружения \c mongo_main_host, \c mongo_main_db,
    \c mongo_log_host и \c mongo_log_db, которые содержат адрес (в формате
    "host[:port]" и названия баз данных. Для подключения к кластеру баз данных
    (replica set) необходимо также указать непустой параметр \c mongo_main_set
    и/или \c mongo_log_set. В этом случае адрес базы данных может быть в
    формате "host1[:port1],host2[:port2],...".

    \c mongo_main_slave_ok и \c mongo_log_slave_ok могут быть равны true или
    false и определяют возможность read-only подключения к slave-серверам в
    кластере.

    По умолчанию будут использованы следующие параметры:

    \code
	mongo_main_host = localhost
	mongo_main_db = getmyad_db
	mongo_main_set = ''
	mongo_main_slave_ok = false
	mongo_log_host = localhost
	mongo_log_db = getmyad
	mongo_log_set = ''
	mongo_log_slave_ok = false
    \endcode

    Сервис должен знать свой адрес. Адрес должен задаваться в переменной
    окружения \c SERVER_ADDR.

    Адрес скрипта перенаправления на рекламное предложение (то, что засчитывает
    клик и отправляет клиента по ссылке рекламного предложения), задаётся в
    переменной \c REDIRECT_SCRIPT_URL. По умолчанию принимается "/redirect".

    Для реализации таргетинга по городам используется база данных MaxMind GeoIP.
    Путь к ней указывается в переменной окружения \c GEOIP_CITY_PATH. По умолчанию
    база ищется в файле /usr/share/GeoIP/GeoLiteCity.dat.


    \section query_params_section Параметры запроса

    Сервис использует следующие get-параметры, передаваемые в URL:

    \param scr      id информера, на котором осуществляется показ рекламы.
		            В основном (рабочем) режиме, это единственный обязательный
		            параметр.

    \param country	двухбувенный код страны, который перекрывает определение
	            	страны по ip. Позволяет просмотреть, как будет отображаться
		            информер в разных странах.

    \param region   название области в написании, принятом в базе MaxMind GeoCity.
                    Позволяет посмотреть, как будет отображаться информер в
            		различных областях. Следует учитывать, что параллельно с
            		таргетингом по областям действует таргетинг по странам,
            		поэтому для корректного отображения следует также передавать
            		параметр country.

    \param show=status  вывод информации о состоянии сервиса и минимальная
                    статистика.

    \param show=json    вывод предложений для информера в формате json.
                    Используется, например, при динамической подгрузке
                    предложений в информер.

    \param test     если равен true, то информация о показах не будет записана.
		            Это можно использовать, например, для служебных проверок
		            информера.

    \param exclude  список id рекламных предложений, которые нужно исключить из
		            результата. Id разделяются знаком '_' (нижнее подчёркивание).
            		Функция используется для исключения повторяющихся
                    предложений в листании страниц информера.

    \param location адрес страницы, на которой расположен информер. Обычно
            		передаётся из javascript загрузчика.

    \param referrer адрес страницы, с которой посетитель попал на сайт-партнёр.
            		Обычно передаётся из javascript загрузчика.

*/


int main(int argc, char *argv[])
{
    google::InitGoogleLogging(argv[0]);
    CgiService(argc, argv).Serve();
    return 0;
}

